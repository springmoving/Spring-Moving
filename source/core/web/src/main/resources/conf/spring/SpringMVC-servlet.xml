<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
                                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd" >


   <context:component-scan  base-package="com.mms.service"/>
   <context:component-scan  base-package="com.mms.rest"/>

   <context:annotation-config/>
   <!-- Configures the @Controller programming model -->
   <mvc:annotation-driven />

  <!--
    Maps incoming requests to the appropriate controller based on the annotations on
    the controller methods.
  -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                     <property name="objectMapper" ref="jacksonObjectMapper"/>
                </bean>
            </list>
        </property>
    </bean>

 <!--
    Maps view names to the appropriate view based on the view name and
    finds the most compatible view among any matching views based on
    the requested content type. It may be desireable to add and configure
    this resolver if you merge the XML and JSON rest servlets into a single
    configuration.
  -->
  <!-- <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"/> -->

     <!-- Jackson ObjectMapper that can serialize and deserialize to and from JSON.
     The ObjectMapper is similar to JAXB marshallers. -->
    <bean class="mms.spring.json.support.MapUnwrappingObjectMapper" id="jacksonObjectMapper"/>

  


</beans>
